// Generated by CoffeeScript 1.6.3
(function() {
  var $, AppView, Application, ApplicationList, ApplicationView,
    _this = this;

  $ = jQuery;

  Application = Backbone.Model.extend({
    "default": {
      status: 'started'
    },
    start: function() {
      return console.log('foo');
    }
  });

  ApplicationList = Backbone.Collection.extend({
    model: Application,
    url: '/api/applications'
  });

  window.Applications = new ApplicationList;

  ApplicationView = Backbone.View.extend({
    tagName: 'tr',
    template: Handlebars.templates['application.hbs'],
    events: {
      'click .js-app-restart': 'restart',
      'click .js-app-stop': 'stop',
      'click .js-app-start': 'start'
    },
    initialize: function() {
      return this.listenTo(this.model, 'change', this.render);
    },
    render: function() {
      window.model = this.model;
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    },
    stop: function() {
      var req;
      return req = $.post('/api/stop/' + _this.model.get('id')).done(function() {
        _this.model.set('status', 'stopped');
        return $('#messages').notify({
          type: 'success',
          message: {
            text: 'The process has been stopped'
          }
        }).show();
      }).fail(function(data) {
        $('#messages').notify({
          type: 'danger',
          message: {
            text: data.responseJSON['error']
          }
        }).show();
        return console.log(data.responseJSON);
      }).always(function() {
        return console.log('always');
      });
    },
    start: function() {
      var req,
        _this = this;
      return req = $.post('/api/start/' + this.model.get('id')).done(function() {
        _this.model.set('status', 'started');
        return $('#messages').notify({
          type: 'success',
          message: {
            text: 'The process has been started'
          }
        }).show();
      }).fail(function(data) {
        $('#messages').notify({
          type: 'danger',
          message: {
            text: data.responseJSON['error']
          }
        }).show();
        return console.log(data.responseJSON);
      }).always(function() {});
    },
    restart: function() {
      var req,
        _this = this;
      return req = $.post('/api/restart/' + this.model.get('id')).done(function() {
        _this.model.set('status', 'started');
        return $('#messages').notify({
          type: 'success',
          message: {
            text: 'The process has been restarted'
          }
        }).show();
      }).fail(function(data) {
        $('#messages').notify({
          type: 'danger',
          message: {
            text: data.responseJSON['error']
          }
        }).show();
        return console.log(data.responseJSON);
      }).always(function() {
        return console.log('always');
      });
    }
  });

  AppView = Backbone.View.extend({
    el: $('.js-application'),
    initialize: function() {
      this.listenTo(Applications, 'add', this.addOne);
      this.listenTo(Applications, 'reset', this.addAll);
      this.listenTo(Applications, 'all', this.render);
      return Applications.fetch();
    },
    render: function() {},
    addOne: function(app) {
      var view;
      console.log(app);
      view = new ApplicationView({
        model: app
      });
      return $('#application-list tbody').append(view.render().el);
    },
    addAll: function() {
      return Applications.each(this.addOne, this);
    }
  });

  $(document).ready(function() {
    return window.App = new AppView;
  });

}).call(this);
